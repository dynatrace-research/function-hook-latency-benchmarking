apiVersion: v1
kind: Service
metadata:
  name: locust
  labels:
    app.kubernetes.io/name: locust
    app.kubernetes.io/part-of: benchmark
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: tb-single-pod
    app.kubernetes.io/part-of: benchmark
  ports:
    - port: 8089
      targetPort: 8089
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tb-single-pod
  labels:
    app.kubernetes.io/name: tb-single-pod
    app.kubernetes.io/part-of: benchmark
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tb-single-pod
      app.kubernetes.io/part-of: benchmark
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tb-single-pod
        app.kubernetes.io/part-of: benchmark
    spec:
      volumes:
        - name: readhook
          emptyDir: {}

      initContainers:
        - name: copy-readhook
          image: ${REPOSITORY_URL}/readhook
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "cp /out/readhook.so /opt/hook/readhook.so"]
          volumeMounts:
            - name: readhook
              mountPath: /opt/hook

      containers:
        - name: sut
          image: ${REPOSITORY_URL}/system-under-test
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: SERVER_PORT
              value: "8080"

        - name: sut-readhook
          image: ${REPOSITORY_URL}/system-under-test
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: SERVER_PORT
              value: "8081"
            - name: LD_PRELOAD
              value: /opt/hook/readhook.so
          volumeMounts:
            - name: readhook
              mountPath: /opt/hook

        - name: test-bench
          image: ${REPOSITORY_URL}/test-bench
          imagePullPolicy: Always
          ports:
            - containerPort: 8089
